[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
exclude = '''
/(
  | \.git
  | \.mypy_cache
  | _build
  | build
  | dist
)/
'''
line-length = 79
skip-magic-trailing-comma = true

[tool.constcheck]
style = "monokai"

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
omit = ["whitelist.py", "constcheck/__main__.py", "tests/example.py"]

[tool.poetry]
authors = ["jshwi <stephen@jshwisolutions.com>"]
description = "Check Python files for repeat use of strings"
license = "MIT"
name = "constcheck"
readme = "README.rst"
version = "0.1.0"

[tool.poetry.dependencies]
lsfiles = "^0.1.1"
object-colors = "^2.0.1"
pathlib3x = "^1.3.9"
python = "^3.8"

[tool.poetry.dev-dependencies]
bump2version = "^1.0.1"
gitspy = "^0.1.1"
ipython = "^8.2.0"
prompt-toolkit = "^3.0.29"
pyaud = "^3.10.0"
pytest = "^7.1.1"
pytest-randomly = "^3.11.0"
restview = "^3.0.0"
toml-sort = "^0.20.0"

[tool.poetry.scripts]
constcheck = "constcheck.__main__:main"

[tool.pyaud.audit]
modules = [
    "files",
    "format",
    "format-docs",
    "format-str",
    "imports",
    "typecheck",
    "unused",
    "lint",
    "coverage",
    "readme",
    "docs",
]

[tool.pyaud.clean]
exclude = ["*.egg*", ".mypy_cache", ".env", "instance"]

[tool.pyaud.indexing]
exclude = ["whitelist.py", "conf.py", "setup.py"]

[tool.pyaud.logging]
disable_existing_loggers = true
version = 1

[tool.pyaud.logging.formatters.standard]
format = "%(asctime)s %(levelname)s %(name)s %(message)s"

[tool.pyaud.logging.handlers.default]
backupCount = 60
class = "logging.handlers.TimedRotatingFileHandler"
filename = "~/.cache/pyaud/log/pyaud.log"
formatter = "standard"
when = "d"

[tool.pyaud.logging.root]
handlers = ["default"]
level = "DEBUG"
propagate = false

[tool.pytest.ini_options]
addopts = [
    "--durations=5",
    "-vv",
    "--color=yes",
    "--cov-report",
    "term-missing",
]
filterwarnings = "ignore::DeprecationWarning"
norecursedirs = ["docs", "*.egg-info", ".git", ".mypy_cache", ".idea", "prof"]

[tool.readmetester]
style = "monokai"
